{"componentChunkName":"component---src-templates-note-dir-js","path":"/notes/programming/007_class_func/001_class","result":{"data":{"site":{"siteMetadata":{"title":"WAT Note(II)"}},"allDirectory":{"nodes":[]},"allMarkdownRemark":{"nodes":[{"excerpt":"クラスを定義する方法についてを示す。 Javaでのクラス定義方法は以下の通り。 あるクラスを継承して作りたい時はクラス名の後にextendsを、インタフェースを実装する時はその後にimplementsを書き加える。 Pythonでのクラスを定義するときの記法は以下の通り。","fields":{"slug":"/programming/007_class_func/001_class/class/"},"frontmatter":{"date":"October 19, 2019","title":"クラス","description":"クラスの定義方法について"}},{"excerpt":"フィールド変数とはクラス内に定義する変数のこと。 その中でも主に、クラス内で定義して全てのインスタンス間で値を共有する変数をクラス変数、 インスタンス毎に独立して値を保持する変数をインスタンス変数という。 言語により呼び名が違う？ので注意 Java…","fields":{"slug":"/programming/007_class_func/001_class/field/"},"frontmatter":{"date":"October 19, 2019","title":"フィールド(クラス変数・インスタンス変数)","description":"クラスのフィールド(クラス変数・インスタンス変数)について"}},{"excerpt":"クラスのコンストラクタについてを書く。 コンストラクタとはクラスのインスタンスを作成した時に、そのインスタンスで最初に実行される関数である。主に初期化のために使われる。 これも言語により呼び名が違うので注意。 Java…","fields":{"slug":"/programming/007_class_func/001_class/constructor/"},"frontmatter":{"date":"October 19, 2019","title":"コンストラクタ(  init  )","description":"クラスのコンストラクタ(  init  )について"}},{"excerpt":"クラスを実装できる言語の大半は、他のクラスの構造を受け継ぎ、そこから新しい変数やメソッド(関数)等を付け足す形でクラスを定義することができる。 これを 継承 という。 クラスの継承の方法についてをここでは示す。 Javaでのクラスの継承の方法は以下の通り。 Java…","fields":{"slug":"/programming/007_class_func/001_class/inheritance/"},"frontmatter":{"date":"October 19, 2019","title":"継承","description":"クラスの継承について"}}]}},"pageContext":{"absolutePath":"/Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/007_class_func/001_class","markdownRegexPath":"//Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/007_class_func/001_class/[^/]*.md/"}},"staticQueryHashes":["2841359383","3257411868"]}