{
    "componentChunkName": "component---src-templates-note-dir-js",
    "path": "/notes/programming/003_number",
    "result": {"data":{"site":{"siteMetadata":{"title":"WAT Note(II)"}},"allDirectory":{"nodes":[{"absolutePath":"/Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/003_number/001_log","id":"c607b5f3-9bd8-54ea-b4cc-90d1c68f7151","relativePath":"programming/003_number/001_log","dir":"/Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/003_number","name":"001_log"},{"absolutePath":"/Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/003_number/002_round","id":"bb9b764e-a30d-52a4-a5bd-1e65b43b79d7","relativePath":"programming/003_number/002_round","dir":"/Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/003_number","name":"002_round"},{"absolutePath":"/Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/003_number/003_operator","id":"ccfdab45-91ea-59e6-b1b0-745772b8db0b","relativePath":"programming/003_number/003_operator","dir":"/Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/003_number","name":"003_operator"},{"absolutePath":"/Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/003_number/004_other_func","id":"ec26f45f-d332-56c7-bbf3-939a599d8c9e","relativePath":"programming/003_number/004_other_func","dir":"/Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/003_number","name":"004_other_func"},{"absolutePath":"/Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/003_number/005_base","id":"360c40c7-7015-5dc9-aacb-8b5842004a2d","relativePath":"programming/003_number/005_base","dir":"/Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/003_number","name":"005_base"}]},"allMarkdownRemark":{"nodes":[{"excerpt":"NaNとは数値では無い値(Not a Number)のことを表す値で、プログラムで数値計算をする際に、正常な演算結果が得られなかったことを示す数値表現として用いられる。 例えば、0を0で除算した結果はNaN…","fields":{"slug":"/programming/003_number/nan/"},"frontmatter":{"date":"October 13, 2019","title":"NaN","description":"NaN(非数)について"}},{"excerpt":"Infinityとは、全ての値より大きい値を示す値である。プログラムでは遥かに大きい値などを指定したい時んい利用することが多い。言語にもよるが計算で得られることもある。 Infinity…","fields":{"slug":"/programming/003_number/infinity/"},"frontmatter":{"date":"October 13, 2019","title":"Infinity","description":"Infinity(非数)について"}},{"excerpt":"文字列を数値にする方法があったように、逆の数値を文字列に変換する方法も存在する。 ここではその方法を示す。 Javaでは主に2つ方法がある。 Stringクラスの**valueOf()**メソッドを使う 数値型の各ラッパークラス(Integerなど)にある**toString…","fields":{"slug":"/programming/003_number/str/"},"frontmatter":{"date":"October 13, 2019","title":"文字型に変換","description":"数値型データを文字列型に変換する方法"}},{"excerpt":"数値の頭をゼロ詰して表示する方法についてを示す。 JavaではStringクラスにある format() メソッドで頭をゼロ詰めして表示することができる。  第1引数(format)には、値をどのような形式で表示するかを指定する。 例えば…","fields":{"slug":"/programming/003_number/zfill/"},"frontmatter":{"date":"October 13, 2019","title":"ゼロ詰","description":"数値の頭をゼロ詰して表示する"}},{"excerpt":"整数の桁数を調べる方法については、\n数値を文字列に変換してその文字列の長さを取得すればよい。 Javaでは数値を文字列に変換し、その文字列の長さを取得すればOK。 実行結果 同様にPythonでも数値を文字列に変換し、その文字列の長さを取得すればOK。 同様にJavascript…","fields":{"slug":"/programming/003_number/digits/"},"frontmatter":{"date":"October 13, 2019","title":"数値の桁数","description":"数値（整数）の桁数を調べる"}},{"excerpt":"重要な定数は大体ライブラリ（モジュール）内で定義されていることが多い。\nここでは円周率(π)を参照する方法についてを示す。 Javaではjava.lang.Mathクラス内にフィールド変数 PI が定義されており、これがJava…","fields":{"slug":"/programming/003_number/pi/"},"frontmatter":{"date":"October 13, 2019","title":"円周率(π)","description":"円周率(π)を出す"}}]}},"pageContext":{"absolutePath":"/Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/003_number","markdownRegexPath":"//Users/watarutsukagoshi/Desktop/WTFiles/gatsby-blog/wat-note2/content/notes/programming/003_number/[^/]*.md/"}},
    "staticQueryHashes": ["2841359383","3257411868"]}