{
    "componentChunkName": "component---src-templates-note-js",
    "path": "/programming/003_number/003_operator/increment/",
    "result": {"data":{"site":{"siteMetadata":{"title":"WAT Note(II)"}},"markdownRemark":{"id":"0181665b-35e7-5656-9b78-cdc4e48952d2","excerpt":"インクリメント・デクリメント(変数の値を1増やす・減らす)演算について。 Java…","html":"<p>インクリメント・デクリメント(変数の値を1増やす・減らす)演算について。</p>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Java\">\n<p>Javaではインクリメント・デクリメントの演算子（ <strong>++</strong>、<strong>—</strong> ）がそれぞれ用意されている。<br>\n利用するには変数の前または後ろに付け加えて書く。<br>\nただし、変数の前に書いた場合と後ろに書いた場合とで、計算が行われるタイミングが異なるので注意する。<br>\nこれら演算子は他の数式と組み合わせて記述することができるが、変数の前に置いた場合は先にインクリメント・デクリメント計算が行われてから全体の計算式を実行し、後に置いた場合は全体の計算式が実行されてからインクリメント・デクリメント計算が行われる。<br>\n実行例を以下に示す。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Map</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HashMap</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//aをインクリメント(1増やす)。a->1</span>\n    a<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a:\"</span><span class=\"token operator\">+</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//aをデクリメント(1減らす)。a->0</span>\n    a<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a:\"</span><span class=\"token operator\">+</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//aをインクリメントしてから全体の計算式実行（aに1足してからprintln）</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a:\"</span><span class=\"token operator\">+</span> <span class=\"token operator\">++</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//全体の計算式実行してからaをインクリメント（printlnしてからaに1を足す）</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a:\"</span><span class=\"token operator\">+</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//a表示（↑のprintlnの後にaがインクリメントされているので、aは2）</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a:\"</span><span class=\"token operator\">+</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>実行結果</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">> java Main\na:1\na:0\na:1\na:1\na:2</code></pre></div>\n<p>変数のインクリメント・デクリメントを行うタイミングに注意して設定する事。</p>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Python\">\n<p>PythonではJava等のようなインクリメント・デクリメント用の演算子は<strong>存在しない</strong>。<br>\nそのため、インクリメントは<code class=\"language-text\">(変数) += 1</code>、デクリメントは <code class=\"language-text\">(変数) -= 1</code> という形で行う。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n<span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n<span class=\"token number\">0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Javascript\">\n<p>Javascriptにもインクリメント・デクリメント演算子が（ <strong>++</strong>、<strong>—</strong> ）がそれぞれ用意されている。</p>\n<p>利用法はJavaと同じ。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(変数)++;\n(変数)--;</code></pre></div>\n</div>","frontmatter":{"title":"インクリメント・デクリメント","date":"October 17, 2019","description":"インクリメント・デクリメント(変数の値を1増やす・減らす)演算を利用する方法。","tags":["Java","Python","Javascript"]}}},"pageContext":{"id":"0181665b-35e7-5656-9b78-cdc4e48952d2"}},
    "staticQueryHashes": ["2841359383","3257411868"]}