{"componentChunkName":"component---src-templates-note-js","path":"/programming/007_class_func/001_class/field/","result":{"data":{"site":{"siteMetadata":{"title":"WAT Note(II)"}},"markdownRemark":{"id":"a9d77aa1-f5bd-547c-af17-95f42c9cacd4","excerpt":"フィールド変数とはクラス内に定義する変数のこと。 その中でも主に、クラス内で定義して全てのインスタンス間で値を共有する変数をクラス変数、 インスタンス毎に独立して値を保持する変数をインスタンス変数という。 言語により呼び名が違う？ので注意 Java…","html":"<p>フィールド変数とはクラス内に定義する変数のこと。<br>\nその中でも主に、クラス内で定義して全てのインスタンス間で値を共有する変数をクラス変数、<br>\nインスタンス毎に独立して値を保持する変数をインスタンス変数という。<br>\n言語により呼び名が違う？ので注意</p>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Java\">\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class クラス名{\n\n    //フィールド変数\n    [static] (フィールド変数１　定義)\n    [static] (フィールド変数２　定義)\n    ・・・\n\n    //文\n}</code></pre></div>\n<p>Javaでのフィールド変数定義方法は以下の通り。</p>\n<p>クラス変数にしたい時は変数の前に <strong>static</strong> をつける。<br>\nstaticをつけない場合はインスタンス変数となる。<br>\nフィールド変数を参照したい時は、クラス変数は <strong>クラス(インスタンス)名.変数名</strong> で参照できる。<br>\nインスタンス変数はインスタンス毎で独立のため、 <strong>インスタンス名.変数名</strong> で参照すること。クラス名を使っても参照はできない(コンパイルエラーとなる)</p>\n<p>実行例は以下の通り。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">//フィールド変数</span>\n    <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"lexus\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> number <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">String</span> owner <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">Car</span> c1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    c1<span class=\"token punctuation\">.</span>number<span class=\"token operator\">=</span><span class=\"token string\">\"100-1010\"</span><span class=\"token punctuation\">;</span>\n    c1<span class=\"token punctuation\">.</span>owner<span class=\"token operator\">=</span><span class=\"token string\">\"ai-ueo\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c1:\"</span> <span class=\"token operator\">+</span> c1<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> c1<span class=\"token punctuation\">.</span>number <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> c1<span class=\"token punctuation\">.</span>owner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Car</span> c2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    c2<span class=\"token punctuation\">.</span>number<span class=\"token operator\">=</span><span class=\"token string\">\"200-2020\"</span><span class=\"token punctuation\">;</span>\n    c2<span class=\"token punctuation\">.</span>owner<span class=\"token operator\">=</span><span class=\"token string\">\"kaki-kukeko\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c2:\"</span> <span class=\"token operator\">+</span> c2<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> c2<span class=\"token punctuation\">.</span>number <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> c2<span class=\"token punctuation\">.</span>owner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"carname :\"</span><span class=\"token operator\">+</span><span class=\"token class-name\">Car</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//Car.name   ->クラス変数なのでクラス名.変数名で参照できる</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"carnum  :\"</span><span class=\"token operator\">+</span><span class=\"token class-name\">Car</span><span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Car.number ->インスタンス変数なのでクラス名からは参照できない(エラー)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>実行結果（コンパイルエラー発生）</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ javac Main.java\nMain.java:22: エラー: staticでない変数 numberをstaticコンテキストから参照することはできません\n    System.out.println(\"carnum  :\"+Car.number); \n                                      ^\nエラー1個</code></pre></div>\n<p>そのためエラー箇所をコメントアウトして再度実行する</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//  System.out.println(\"carnum  :\"+Car.number);</span></code></pre></div>\n<p>実行結果</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ javac Main.java\n$ java Main\nc1:lexus 100-1010 ai-ueo\nc2:lexus 200-2020 kaki-kukeko\ncarname :lexus</code></pre></div>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Python\">\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class クラス名:\n  // フィールド変数\n  変数1 = 値1\n  変数2 = 値2\n</code></pre></div>\n<p>Pythonにもクラス変数とインスタンス変数がある。<br>\nクラス変数はクラス内、各関数外に定義し、クラス、インスタンスオブジェクトから参照することができる。<br>\nインスタンス変数は、後述するがクラスの__init__関数で定義する。ここで定義した変数はインスタンスからしか参照できない。</p>\n<p>使用例を以下に示す。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Car</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     name <span class=\"token operator\">=</span> <span class=\"token string\">\"lexus\"</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             self<span class=\"token punctuation\">.</span>number<span class=\"token operator\">=</span>n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>             self<span class=\"token punctuation\">.</span>owner<span class=\"token operator\">=</span>o\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> c1<span class=\"token operator\">=</span>Car<span class=\"token punctuation\">(</span><span class=\"token string\">\"100-1010\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"ai-ueo\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> c2<span class=\"token operator\">=</span>Car<span class=\"token punctuation\">(</span><span class=\"token string\">\"200-2020\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"kaki-kukeko\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Car<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\nlexus\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Car<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\nAttributeError<span class=\"token punctuation\">:</span> <span class=\"token builtin\">type</span> <span class=\"token builtin\">object</span> <span class=\"token string\">'Car'</span> has no attribute <span class=\"token string\">'number'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\nlexus\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span>\n<span class=\"token number\">100</span><span class=\"token operator\">-</span><span class=\"token number\">1010</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">.</span>owner<span class=\"token punctuation\">)</span>\nai<span class=\"token operator\">-</span>ueo\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\nlexus\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span>\n<span class=\"token number\">200</span><span class=\"token operator\">-</span><span class=\"token number\">2020</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">.</span>owner<span class=\"token punctuation\">)</span>\nkaki<span class=\"token operator\">-</span>kukeko\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> </code></pre></div>\n</div>","frontmatter":{"title":"フィールド(クラス変数・インスタンス変数)","date":"October 19, 2019","description":"クラスのフィールド(クラス変数・インスタンス変数)について","tags":["Java","Python"]}}},"pageContext":{"id":"a9d77aa1-f5bd-547c-af17-95f42c9cacd4"}},"staticQueryHashes":["2841359383","3257411868"]}