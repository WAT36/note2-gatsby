{
    "componentChunkName": "component---src-templates-note-js",
    "path": "/programming/007_class_func/002_function/function/",
    "result": {"data":{"site":{"siteMetadata":{"title":"WAT Note(II)"}},"markdownRemark":{"id":"7f7a741d-e024-5aeb-acc5-5a3c5d6e72fa","excerpt":"関数・メソッドを定義する方法についてを示す。 Javaでは メソッド と言う名で呼ばれる。定義するための記法は以下の通り。クラス内で記述する。 アクセス修飾子はpublic,private,protectedなど。publicの場合は他のクラスからも利用できる。private…","html":"<p>関数・メソッドを定義する方法についてを示す。</p>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Java\">\n<p>Javaでは <strong>メソッド</strong> と言う名で呼ばれる。定義するための記法は以下の通り。クラス内で記述する。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[アクセス修飾子] [static] [返り値の型] メソッド名 {\n    //処理文\n\n    return 返り値;  //返り値がvoidなら不要\n} </code></pre></div>\n<p>アクセス修飾子はpublic,private,protectedなど。publicの場合は他のクラスからも利用できる。privateにすると自身のクラスからしか利用することができない。\nstaticを書くとそのメソッドは静的メソッドとなり、外部のクラスから <code class=\"language-text\">クラス名.メソッド名</code> の形で利用することができる。staticがないとインスタンスメソッドとなり、インスタンスを生成してそのインスタンス名.メソッド名　の形でしか利用することができない。（通常はインスタンスメソッドで利用する）<br>\nまた、メソッドには返り値が必要である。メソッドの最後に <strong>return</strong> 文を利用して、メソッドの出力としての返り値を指定してやる必要がある。この返り値の型は、メソッド宣言時に指定した型と同じでないといけない。<br>\nただし、返り値の型にvoidとした場合は返り値がないと言う意味なので、returnは不要である。</p>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Python\">\n<p>Pythonでは <strong>関数</strong> と言う名で呼ばれる。定義方法は以下の通り。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">def 関数名(引数):\n    #処理文\n    return 返り値   #関数に返り値を設ける場合はreturnを記載する。無い場合は記載しなくて良い。</code></pre></div>\n<p>関数の処理文はdefの次の行から、インデントを一つずらして書く。このインデントの段階にある文が関数の処理文として扱われる。</p>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Javascript\">\n<p>Javascriptでは <strong>関数</strong> と <strong>メソッド</strong> で意味合いが微妙に異なるので注意。</p>\n<h2>関数</h2>\n<p>関数について、Javascriptでは <strong>function</strong> キーワードを用いる方法と、 <strong>Function</strong> コンストラクタを用いて定義する方法がある。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function 関数名(引数) {\n    //関数内の処理\n}\n\n//または\n\nvar オブジェクト名 = new Function([引数1[,引数2]],\"処理\")</code></pre></div>\n<p>引数は0個でも、複数個でも設定できる。</p>\n<p>戻り値を設定したい場合は、 <strong>return</strong> 文を使って戻したい値を記載する。</p>\n<p>また、Javascriptでは <strong>無名関数</strong> という使用があり、変数に直接関数を代入することができる。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var 変数名 = function(引数){\n    //処理\n};</code></pre></div>\n<p>呼び出すときは、<code class=\"language-text\">変数名(引数);</code>という形で利用できる。</p>\n<h2>メソッド</h2>\n<p>Javascriptでは、オブジェクト型データのプロパティに定義した関数のことをメソッドと呼んでいる。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var 変数名 = {\n    (key名) : function(){\n        //メソッド\n    },\n\n    ・・・\n}</code></pre></div>\n<p>メソッドを使用するには、オブジェクト型の変数のメソッドが指定されているキーを呼び出せば良い。</p>\n</div>","frontmatter":{"title":"関数(メソッド)","date":"October 20, 2019","description":"関数(メソッド)の定義について","tags":["Java","Python","Javascript"]}}},"pageContext":{"id":"7f7a741d-e024-5aeb-acc5-5a3c5d6e72fa"}},
    "staticQueryHashes": ["2841359383","3257411868"]}