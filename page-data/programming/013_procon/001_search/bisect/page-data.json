{"componentChunkName":"component---src-templates-note-js","path":"/programming/013_procon/001_search/bisect/","result":{"data":{"site":{"siteMetadata":{"title":"WAT Note(II)"}},"markdownRemark":{"id":"4ad5fc98-8d7b-5e48-b6cb-7eeacc9bd058","excerpt":"趣味で競プロをやるようになり、Atcoderの問題を何問か解いているのだが、 やっている内に覚えないといけないこともいくつかあるわけで。\nその内の一つに二分探索というアルゴリズムを使うという場面を多く見てきたため、自分が今よく利用しているpython…","html":"<p>趣味で競プロをやるようになり、Atcoderの問題を何問か解いているのだが、<br>\nやっている内に覚えないといけないこともいくつかあるわけで。<br>\nその内の一つに二分探索というアルゴリズムを使うという場面を多く見てきたため、自分が今よく利用しているpythonでいつでも使えるように二分探索を行うスクリプトでも書いておこうかと思った。</p>\n<p>しかし取り掛かろうとして調べて見たところ、なんとpythonには二分探索を行うライブラリが最初から用意されているらしい。\nそれがこの「<strong>bisect</strong>」というもので、このライブラリについて調べて見た。</p>\n<h1>bisect</h1>\n<p>bisectモジュールのbisect関数はリストと値を入力とし、値をリストに挿入する位置のインデックスを返す。\nとりあえずは使用例ということで、bisectを使ってみた。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> bisect\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">70</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> bisect<span class=\"token punctuation\">.</span>bisect<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">5</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> </code></pre></div>\n<p>この例の場合、リストaに値55を入れようとした時、a[\b5](50と60の間)に入れるのが適切なため、５を返す。</p>\n<p>ちなみにbisectを使う時、入力するリストはすでにソート済みであることが前提である（これは本来の二分探索でも同じ）。ソートされてないリストを入力してもエラーは発生しないが、ソートしていないため間違った形で二分探索が行われてしまう。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> bisect\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">54</span><span class=\"token punctuation\">,</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span><span class=\"token number\">76</span><span class=\"token punctuation\">,</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span><span class=\"token number\">89</span><span class=\"token punctuation\">,</span><span class=\"token number\">44</span><span class=\"token punctuation\">,</span><span class=\"token number\">323</span><span class=\"token punctuation\">,</span><span class=\"token number\">67</span><span class=\"token punctuation\">,</span><span class=\"token number\">88</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> bisect<span class=\"token punctuation\">.</span>bisect<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># ソートしなくても二分探索は行うが・・・</span>\n<span class=\"token number\">6</span></code></pre></div>\n<p>また、入力した値が既にリストに入っていた場合、リストでその値の前に入れようとするのか、後に入れようとするのか分かれるがどうなるのか？</p>\n<p>bisectモジュールには更に<strong>bisect_left</strong>と<strong>bisect_right</strong>という関数があり、各々の場合に応じてこれらを使い分ける。\n使用例を示す。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> bisect\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> bisect<span class=\"token punctuation\">.</span>bisect_left<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> bisect<span class=\"token punctuation\">.</span>bisect_right<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">4</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> bisect<span class=\"token punctuation\">.</span>bisect<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">4</span></code></pre></div>\n<p>この例の場合、a[1]からa[3]まで2であり、bisect_leftで2をリストaに適用すると、挿入点は2の一番前の位置である1を返す。\nbisect_rightを使った場合はその逆で、挿入点は2の一番後の位置である4を返す。\nちなみにbisect関数はbisect_rightと同じ動作をする。</p>\n<h1>insort</h1>\n<p>insort関数はbisect関数の動作に加えて、リストへの挿入も行う関数である。\nbisect関数と同様に、リストに入力と同じ値があった場合にその値の前か後のどちらに挿入するかは、<strong>insort_left</strong>と<strong>insort_right</strong>という関数があるので使い分ける。\nちなみにinsort関数はinsort_rightと同じ動作をする。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> bisect\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">70</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> bisect<span class=\"token punctuation\">.</span>insort<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span><span class=\"token number\">55</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> </code></pre></div>\n<p>P.S.</p>\n<p>今後二分探索をする必要が出てきたときはこれらを活用していきたい。\nまあでも、できればライブラリ頼りではなく、本当はアルゴリズム自体も自分で理解して、一から書けるようにもすべきだけど・・ね</p>","frontmatter":{"title":"Pythonで二分探索を行うライブラリ「bisect」","date":"October 31, 2019","description":"","tags":[]}}},"pageContext":{"id":"4ad5fc98-8d7b-5e48-b6cb-7eeacc9bd058"}},"staticQueryHashes":["2841359383","3257411868"]}