{"componentChunkName":"component---src-templates-note-js","path":"/programming/010_other/type/","result":{"data":{"site":{"siteMetadata":{"title":"WAT Note(II)"}},"markdownRemark":{"id":"40863e3c-b0e2-5b21-a1e7-7dec8c30da57","excerpt":"変数の型を調べる方法についてを示す。 javaには instanceof という演算子がある。  変数に入っているデータの型が右辺のクラスと一致していればtrue、そうでない場合はfalseが返る。 この演算子は参照型のクラスにしか使えず、intやchar…","html":"<p>変数の型を調べる方法についてを示す。</p>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Java\">\n<p>javaには <strong>instanceof</strong> という演算子がある。</p>\n<p><code class=\"language-text\">変数 instanceof クラス名</code></p>\n<p>変数に入っているデータの型が右辺のクラスと一致していればtrue、そうでない場合はfalseが返る。<br>\nこの演算子は参照型のクラスにしか使えず、intやcharのような基本データ型には利用できない。(ラッパークラスには利用可能)<br>\nまた、instanceof演算子は変数のデータの型とクラスに <strong>継承</strong> または <strong>実装</strong> の関係がないと使用できないという決まりがある。\n例として以下のように書いてもエラーとなる。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n      <span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"aaa\"</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s is String? :\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>s <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"s is Integer?:\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>s <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>コンパイル結果</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ javac Main.java \nMain.java:7: エラー: 不適合な型: StringをIntegerに変換できません:\n      System.out.println(\"s is Integer?:\" + (s instanceof Integer));\n                                             ^\nエラー1個</code></pre></div>\n<p>instanceof演算子は主に継承および実装の関係にあるデータ間で利用する。（スーパークラスに入っているデータがどのサブクラスか、インタフェースを実装しているのがどのクラスか、など）</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Fruits</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Apple</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Fruits</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Banana</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Fruits</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Cherry</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Fruits</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n      <span class=\"token class-name\">Fruits</span> f <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Banana</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f is Fruits?:\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>f <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Fruits</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f is Apple? :\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>f <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Apple</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f is Banana?:\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>f <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Banana</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"f is Cherry?:\"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>f <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">Cherry</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>実行結果</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">>  java Main\nf is Fruits?:true\nf is Apple? :false\nf is Banana?:true\nf is Cherry?:false</code></pre></div>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Python\">\n<p>Pythonでは組み込み関数 <strong>type()</strong> を使うことにより、変数にあるデータの型が何であるかが分かる。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n<span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'int'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> b<span class=\"token operator\">=</span><span class=\"token string\">'moji'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> b\n<span class=\"token string\">'moji'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> c<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> c\n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'list'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> d<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> d\n<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'dict'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> </code></pre></div>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Javascript\">\n<p>Javascriptでは特殊演算子 <strong>typeof</strong> を利用することで、変数の型を調べることができる。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">(</span>変数<span class=\"token operator\">/</span>定数<span class=\"token punctuation\">)</span></code></pre></div>\n<p>使用例</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span> <span class=\"token number\">11</span>\n<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"number\"</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span> <span class=\"token string\">'aaa'</span>\n<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"string\"</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span> <span class=\"token keyword\">undefined</span>\n<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"undefined\"</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span> <span class=\"token boolean\">true</span>\n<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"boolean\"</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"object\"</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"function\"</span></code></pre></div>\n<p>但し、Null値型に対しては仕様に反してobjectと返してしまう。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">typeof</span> <span class=\"token keyword\">null</span>\n<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"object\"</span></code></pre></div>\n<p>そこで、Null値型を判別したい場合は、<code class=\"language-text\">Object.prototype.toString</code>を用いて判別を行う。\n以下に例を示す。なお、Null値だけでなく他の型に対しても判別が可能である。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">></span> <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>toString\n<span class=\"token operator\">&lt;</span> <span class=\"token keyword\">undefined</span>\n<span class=\"token operator\">></span> <span class=\"token function\">t</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"[object Null]\"</span>\n<span class=\"token operator\">></span> <span class=\"token function\">t</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"[object Number]\"</span>\n<span class=\"token operator\">></span> <span class=\"token function\">t</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token string\">'as'</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"[object String]\"</span></code></pre></div>\n</div>","frontmatter":{"title":"変数の型","date":"October 23, 2019","description":"変数の型を調べる方法について","tags":["Java","Python","Javascript"]}}},"pageContext":{"id":"40863e3c-b0e2-5b21-a1e7-7dec8c30da57"}},"staticQueryHashes":["2841359383","3257411868"]}