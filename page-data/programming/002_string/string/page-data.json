{"componentChunkName":"component---src-templates-note-js","path":"/programming/002_string/string/","result":{"data":{"site":{"siteMetadata":{"title":"WAT Note(II)"}},"markdownRemark":{"id":"e2487039-d487-5f72-8239-22ed4249e3d0","excerpt":"プログラム中で文字列型の値（文字列リテラル）を宣言・利用する方法を示す。 クラスはここではMain.javaとする Javaで文字を扱うには、基本データ(プリミティブ)型であり1文字のみを扱える char 型と、\n2文字以上の文字列を扱える String 型がある。（もう少し言うとStringBuilder…","html":"<p>プログラム中で文字列型の値（文字列リテラル）を宣言・利用する方法を示す。</p>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Java\">\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">char</span> c <span class=\"token operator\">=</span> <span class=\"token char\">'c'</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"Words\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>クラスはここではMain.javaとする</p>\n<p>Javaで文字を扱うには、基本データ(プリミティブ)型であり1文字のみを扱える <strong>char</strong> 型と、\n2文字以上の文字列を扱える <strong>String</strong> 型がある。（もう少し言うとStringBuilder型というのもあるがここでは割愛する\n）</p>\n<p>char型の場合は1文字をシングルクォート(”)で囲んで宣言する。char型で2文字以上の文字を宣言するとコンパイルエラ\nーとなるんので注意。</p>\n<p>String型の場合は文字列をダブルクォート(\"\")で囲んで宣言する。文字列は0文字から扱える。</p>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Python\">\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(変数) = \"文字列\"\n(変数) = '文字列'</code></pre></div>\n<p>Pythonでは文字列を宣言するには上記のようにする。</p>\n<p>Javaとは違い、Pythonでは文字列を宣言するときにはシングルクォート(”)、ダブルクォート(\"\")のどちらを利用しても\nよい。</p>\n<p>またPythonは動的片付けのため、Javaと違い型名の指定は基本不要である。</p>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Javascript\">\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> h1 <span class=\"token operator\">=</span> <span class=\"token string\">'Hello! World!'</span>\n<span class=\"token keyword\">var</span> h2 <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello! World!\"</span></code></pre></div>\n<p>Javascriptでも、シングルクォート(”)、ダブルクォート(\"\")を利用して文字列を宣言する。</p>\n</div>","frontmatter":{"title":"文字列を宣言する","date":"October 11, 2019","description":null,"tags":["Java","Python","Javascript"]}}},"pageContext":{"id":"e2487039-d487-5f72-8239-22ed4249e3d0"}},"staticQueryHashes":["2841359383","3257411868"]}