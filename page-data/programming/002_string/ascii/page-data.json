{
    "componentChunkName": "component---src-templates-note-js",
    "path": "/programming/002_string/ascii/",
    "result": {"data":{"site":{"siteMetadata":{"title":"WAT Note(II)"}},"markdownRemark":{"id":"cdb0843e-a3e1-5ce5-927f-cdd135381fda","excerpt":"コンピュータは二進数しか扱えないため、文字データも二進数（つまり整数）として扱われる。\nつまり１文字に対して対応する整数が割り当てられており、コンピュータはその数を特定の文字と思い込み処理する。この数の事を文字コードという。\n文字１文字から、その文字の文字コードを取得する方法をまとめる。 クラスはここではMain…","html":"<p>コンピュータは二進数しか扱えないため、文字データも二進数（つまり整数）として扱われる。\nつまり１文字に対して対応する整数が割り当てられており、コンピュータはその数を特定の文字と思い込み処理する。この数の事を文字コードという。\n文字１文字から、その文字の文字コードを取得する方法をまとめる。</p>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Java\">\n<p>クラスはここではMain.javaとする</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">char</span> c <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 97</span>\n    \n      <span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"aaaaa\"</span><span class=\"token punctuation\">;</span>\n      a <span class=\"token operator\">=</span> s <span class=\"token comment\">//コンパイルエラー</span>\n\n      c <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// sの0文字目をchar型で返す </span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// a</span>\n      a <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 97</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Javaでは１文字のchar型と文字列のString型があるが、\n文字コードに変換できるのは <strong>char型</strong> のほうであり、String型の変換はできない。\nchar型のデータをint型の変数に代入するのは可能なのか？という疑問もあるだろうが、\nJavaには代入する変数とデータの型が違っていても、片方がもう片方の型に変換が可能であれば代入は行える。\nchar型の変数はint型、double型などの数値データ型に変換が可能であり、この例ではint型の変数に代入できる。\n対してString型はint,doubleなどの数値データ型には変換できないので、変換したい1文字をchar型として取り出してから行う。</p>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Python\">\n<p>Pythonで文字から文字コードを取得するには <strong>ord()</strong> 関数を利用する。\nord()関数は1文字を受け取りその文字コードを出力する。入力する文字は半角でも全角でも良い。\n２文字以上を入力するとエラーになる。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">97</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aa\"</span><span class=\"token punctuation\">)</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\nTypeError<span class=\"token punctuation\">:</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> expected a character<span class=\"token punctuation\">,</span> but string of length <span class=\"token number\">2</span> found\n<span class=\"token operator\">>></span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"あ\"</span><span class=\"token punctuation\">)</span> \n<span class=\"token number\">12354</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>\n<p>また、逆の文字コードから対応する文字を出力する関数 <strong>chr()</strong> もある。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">97</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'a'</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">98</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">'b'</span></code></pre></div>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Javascript\">\n<p>Javascriptで文字から文字コードを取得するには、文字列の関数 <strong>charCodeAt()</strong> を利用する。\n引数には文字コードを取得したい文字列の何文字目かを入力する。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"abc\"</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>実行結果</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">97\n98\n99</code></pre></div>\n</div>","frontmatter":{"title":"文字コード（アスキーコード）を取得する","date":"October 12, 2019","description":"1文字からその文字の文字コード（アスキーコード）を取得する","tags":["Java","Python","Javascript"]}}},"pageContext":{"id":"cdb0843e-a3e1-5ce5-927f-cdd135381fda"}},
    "staticQueryHashes": ["2841359383","3257411868"]}