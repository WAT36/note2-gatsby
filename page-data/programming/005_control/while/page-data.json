{"componentChunkName":"component---src-templates-note-js","path":"/programming/005_control/while/","result":{"data":{"site":{"siteMetadata":{"title":"WAT Note(II)"}},"markdownRemark":{"id":"9c7f263c-0529-547e-a108-7ef342a29994","excerpt":"繰り返し処理を行う制御構文の一つ、while文について各言語での利用法を示す。 また、言語にもよるが do-while文 についてもここで示す。 Javaでの記法は以下の通り。 上記におけるフローは以下の通り。 条件式を実行しtrueなら3,falseなら4に行く while文の中身の処理が実行される。…","html":"<p>繰り返し処理を行う制御構文の一つ、while文について各言語での利用法を示す。</p>\n<p>また、言語にもよるが <strong>do-while文</strong> についてもここで示す。</p>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Java\">\n<p>Javaでの記法は以下の通り。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">while(条件式){\n    //処理\n}</code></pre></div>\n<p>上記におけるフローは以下の通り。</p>\n<ol>\n<li>条件式を実行しtrueなら3,falseなら4に行く</li>\n<li>while文の中身の処理が実行される。</li>\n<li>1.に戻る</li>\n<li>終了する</li>\n</ol>\n<p>while文の条件式は必ずtrueかfalseを返すような式にする。<br>\n処理の関係上、条件式がずっとtrueになるような処理にさせると無限ループとなり、実行が終わらなくなるので注意。</p>\n<p>実行例を以下に示す。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//iに1を足す これがないと無限ループ</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>実行結果</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">> java Main\n0\n1\n2\n3\n4</code></pre></div>\n<hr>\n<p>また、do-while文は以下のように記載する。while文と異なる点は、処理(doブロック内)を実行後に条件式が評価される点である。そのため、条件が最初から偽の状態でも、処理は1回は行われる。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//条件が真だった場合に実行される処理(doブロック)</span>\n    ・・・\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>条件<span class=\"token punctuation\">)</span></code></pre></div>\n<p>実行例は以下の通り。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  i<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>結果</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0\n1\n2\n3\n4</code></pre></div>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Python\">\n<p>Pythonでの記法は以下の通り。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">while 条件式:\n    #処理\n    ・・・</code></pre></div>\n<p>条件式がTrueである限り、while文以下の処理を実行し続ける。</p>\n<p>実行例を以下に示す。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span>   \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">while</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     i<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> \n<span class=\"token number\">0</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">4</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Javascript\">\n<p>Javascriptでのwhile文の記法は以下の通り。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>条件<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//条件が真だった場合に実行される処理</span>\n    ・・・\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>条件式がtrueである限り、while文内の処理を実行し続ける。</p>\n<p>実行例を以下に示す。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  i<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>結果</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0\n1\n2\n3\n4</code></pre></div>\n<hr>\n<p>また、do-while文は以下のように記載する。while文と異なる点は、処理(doブロック内)を実行後に条件式が評価される点である。そのため、条件が最初から偽の状態でも、処理は1回は行われる。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//条件が真だった場合に実行される処理(doブロック)</span>\n    ・・・\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>条件<span class=\"token punctuation\">)</span></code></pre></div>\n<p>実行例は以下の通り。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  i<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>結果</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0\n1\n2\n3\n4</code></pre></div>\n</div>","frontmatter":{"title":"while文","date":"October 17, 2019","description":"while文について","tags":["Java","Python","Javascript"]}}},"pageContext":{"id":"9c7f263c-0529-547e-a108-7ef342a29994"}},"staticQueryHashes":["2841359383","3257411868"]}