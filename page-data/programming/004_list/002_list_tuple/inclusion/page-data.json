{"componentChunkName":"component---src-templates-note-js","path":"/programming/004_list/002_list_tuple/inclusion/","result":{"data":{"site":{"siteMetadata":{"title":"WAT Note(II)"}},"markdownRemark":{"id":"f0599266-0e82-5e72-8471-c7fc380b145d","excerpt":"リストから条件に合う要素のみを取得した新しいリストを作成する方法を示す。 Java…","html":"<p>リストから条件に合う要素のみを取得した新しいリストを作成する方法を示す。</p>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Java\">\n<p>Javaではリストの要素を１個１個見ていって、条件に合っていたら別リストにその要素を追加させていけば、そのリストが条件に合う要素のみを格納したリストになる。<br>\n（単純だが、もっといい方法が無いか模索中）</p>\n<p>一例として、文字列のリストから３文字以上の要素のみを取り出したリストを作る例を示す。</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> l <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    l<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    l<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    l<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ccc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    l<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dddd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> m <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>l<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>実行結果</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">> java Main      \n[a, bb, ccc, dddd]\n[ccc, dddd]</code></pre></div>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Python\">\n<p>Pythonでは <strong>リスト内包表記</strong> という方法を用いる。<br>\nリストの中でイテラブルオブジェクトの要素を条件に従い取り出す形で定義すると、イテラブルオブジェクトの要素の中で指定した条件に合う要素だけが残ったリストを返してくれる。<br>\n表記例は以下の通り。</p>\n<p><code class=\"language-text\">[要素 for 要素 in イテラブルオブジェクト if 条件]</code></p>\n<p>使用例を以下に示す。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"bb\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"ccc\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"dddd\"</span><span class=\"token punctuation\">]</span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ccc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dddd'</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> \n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span>s <span class=\"token keyword\">for</span> s <span class=\"token keyword\">in</span> a <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> \n<span class=\"token punctuation\">[</span><span class=\"token string\">'ccc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dddd'</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> </code></pre></div>\n</div>","frontmatter":{"title":"条件に合う要素のみで新リストを作る","date":"October 16, 2019","description":"リストから条件に合う要素のみを取得した新しいリストを作成する","tags":["Java","Python"]}}},"pageContext":{"id":"f0599266-0e82-5e72-8471-c7fc380b145d"}},"staticQueryHashes":["2841359383","3257411868"]}