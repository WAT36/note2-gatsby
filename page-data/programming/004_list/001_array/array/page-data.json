{
    "componentChunkName": "component---src-templates-note-js",
    "path": "/programming/004_list/001_array/array/",
    "result": {"data":{"site":{"siteMetadata":{"title":"WAT Note(II)"}},"markdownRemark":{"id":"2cd5b2f1-c2c7-55e0-b3a6-f102b4c52d12","excerpt":"配列とは、同じデータ型の値をまとめて扱いたい時に利用するデータ構造である。ここでは配列の定義方法についてを述べる。 なお、Pythonには配列という概念は存在しない（リストとひっくるめている？）のでここでは述べない。 Java…","html":"<p>配列とは、同じデータ型の値をまとめて扱いたい時に利用するデータ構造である。ここでは配列の定義方法についてを述べる。</p>\n<p>なお、Pythonには配列という概念は存在しない（リストとひっくるめている？）のでここでは述べない。</p>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Java\">\n<p>Javaでは以下の形式で配列を宣言する。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">データ型[] 配列名 = new データ型[要素数];</code></pre></div>\n<p>この方法により、配列内に指定したデータ型の値を、指定した要素数の数まで入れることができる。</p>\n<p>配列への値の代入及び取得は、以下のようにインデックスを指定して行う。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">配列名[インデックス] = 値;\n変数 = 配列名[インデックス];</code></pre></div>\n</div>\n<div class=\"note_content_by_programming_language\" id=\"note_content_Javascript\">\n<p>Javascriptでは以下の形式で配列を宣言する。Javaのような要素数の指定は不要である。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var 配列名 = [(値、カンマ区切りで複数入力可)]</code></pre></div>\n<p>配列への値の代入及び取得は、Javaと同じようにインデックスを指定して行う。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">配列名[インデックス] = 値;\n変数 = 配列名[インデックス];</code></pre></div>\n</div>","frontmatter":{"title":"配列","date":"October 14, 2019","description":"配列の宣言方法について","tags":["Java","Javascript"]}}},"pageContext":{"id":"2cd5b2f1-c2c7-55e0-b3a6-f102b4c52d12"}},
    "staticQueryHashes": ["2841359383","3257411868"]}