{"version":3,"file":"component---src-pages-index-js-1f02b65e7f71cdf026b6.js","mappings":"uJAqDA,IA1CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAC3B,UAAGF,EAAKG,KAAKC,oBAAb,OAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,QAWZJ,MAAAA,OAAA,EAAAA,EAAQK,OACP,uCACa,8BAASL,EAAOK,MAD7B,KAC6CL,MAAAA,OAAA,EAAAA,EAAQM,UAAW,S,iFCyBxE,UAhEc,SAAC,GAAwB,IAAD,EAArBR,EAAqB,EAArBA,KAAMS,EAAe,EAAfA,SACfC,GAAY,UAAAV,EAAKG,KAAKC,oBAAV,eAAwBO,QAAxB,QAGlB,OACE,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,UACX,gBAAC,IAAD,MACA,uJAGA,+DAGA,oCAIA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,aACP","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/* <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      /> */}\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst Index = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n//  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Index\" />\n      <Bio />\n      <p>\n      このページはわたくしWATが日ごろの業務及び業務外等の活動で得た技術的知見を備忘のために書き記しておく事を目的に開設した、個人的なノート代わりのサイトです。 たまに自分で作ったプロダクトや雑品などについても書いていけたら良いなあと思っています。    \n      </p>\n      <p>\n      このページはGithub上で、Gatsbyを使って作成しております。    \n      </p>\n      <p>\n      まあ、よろしく\n      </p>\n\n      <Link to=\"/blog_top\">\n        <p>ブログ</p>\n      </Link>\n    </Layout>\n  )\n\n  // return (\n  //   <Layout location={location} title={siteTitle}>\n  //     <Seo title=\"All posts\" />\n  //     <Bio />\n  //     <ol style={{ listStyle: `none` }}>\n  //       {posts.map(post => {\n  //         const title = post.frontmatter.title || post.fields.slug\n\n  //         return (\n  //           <li key={post.fields.slug}>\n  //             <article\n  //               className=\"post-list-item\"\n  //               itemScope\n  //               itemType=\"http://schema.org/Article\"\n  //             >\n  //               <header>\n  //                 <h2>\n  //                   <Link to={post.fields.slug} itemProp=\"url\">\n  //                     <span itemProp=\"headline\">{title}</span>\n  //                   </Link>\n  //                 </h2>\n  //                 <small>{post.frontmatter.date}</small>\n  //               </header>\n  //               <section>\n  //                 <p\n  //                   dangerouslySetInnerHTML={{\n  //                     __html: post.frontmatter.description || post.excerpt,\n  //                   }}\n  //                   itemProp=\"description\"\n  //                 />\n  //               </section>\n  //             </article>\n  //           </li>\n  //         )\n  //       })}\n  //     </ol>\n  //   </Layout>\n  // )\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","name","summary","location","siteTitle","title","Link","to"],"sourceRoot":""}